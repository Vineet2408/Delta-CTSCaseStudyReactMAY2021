[{"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\index.js":"1","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\App.js":"2","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\RegistrationPage.js":"3","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\Main.js":"4","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\Header.js":"5","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\Footer.js":"6","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\MenuNavigation.js":"7","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\RegistrationSuccessful.js":"8","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\reducers\\index.js":"9","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\LoginPage.js":"10","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\reducers\\userReducers.js":"11","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\actions\\userActions.js":"12","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\services\\userService.js":"13","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\CustomerProfile.js":"14","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\customer\\Loans.js":"15","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\customer\\Customer.js":"16","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\ApplyLoanPage.js":"17","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\containers\\PersonalLoan.js":"18","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\containers\\EducationLoan.js":"19","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\UpdateCustomerDetailsPage.js":"20","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\Home.js":"21","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\LogoutPage.js":"22"},{"size":830,"mtime":1621686373359,"results":"23","hashOfConfig":"24"},{"size":2013,"mtime":1621923230431,"results":"25","hashOfConfig":"24"},{"size":27839,"mtime":1621918693983,"results":"26","hashOfConfig":"24"},{"size":387,"mtime":1621879632298,"results":"27","hashOfConfig":"24"},{"size":573,"mtime":1621599142410,"results":"28","hashOfConfig":"24"},{"size":178,"mtime":1621525670891,"results":"29","hashOfConfig":"24"},{"size":1593,"mtime":1621923860858,"results":"30","hashOfConfig":"24"},{"size":212,"mtime":1621676797074,"results":"31","hashOfConfig":"24"},{"size":191,"mtime":1621606252321,"results":"32","hashOfConfig":"24"},{"size":2290,"mtime":1621921125877,"results":"33","hashOfConfig":"24"},{"size":2023,"mtime":1621920034913,"results":"34","hashOfConfig":"24"},{"size":346,"mtime":1621919954793,"results":"35","hashOfConfig":"24"},{"size":4368,"mtime":1621920741575,"results":"36","hashOfConfig":"24"},{"size":2935,"mtime":1621881227365,"results":"37","hashOfConfig":"24"},{"size":374,"mtime":1621881255852,"results":"38","hashOfConfig":"24"},{"size":1588,"mtime":1621924395898,"results":"39","hashOfConfig":"24"},{"size":6143,"mtime":1621923243208,"results":"40","hashOfConfig":"24"},{"size":3715,"mtime":1621917303892,"results":"41","hashOfConfig":"24"},{"size":4966,"mtime":1621877856342,"results":"42","hashOfConfig":"24"},{"size":28860,"mtime":1621924560927,"results":"43","hashOfConfig":"24"},{"size":1564,"mtime":1621880980830,"results":"44","hashOfConfig":"24"},{"size":620,"mtime":1621920829270,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"xy3j0p",{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\index.js",[],["95","96"],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\App.js",["97","98","99","100"],"import './App.css';\nimport { Button, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Route, Switch } from 'react-router-dom';\nimport RegistrationPage from './pages/RegistrationPage';\nimport Main from './components/layout/Main';\nimport RegistrationSuccessful from './pages/RegistrationSuccessful';\nimport LoginPage from './pages/LoginPage';\nimport CustomerProfile from './pages/CustomerProfile'\nimport ApplyLoanPage from './pages/ApplyLoanPage';\nimport UpdateCustomerDetailsPage from './pages/UpdateCustomerDetailsPage';\nimport Home from './pages/Home';\nimport LogoutPage from './pages/LogoutPage';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: \"red\",\n    backgroundColor: \"blue\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className=\"container-fluid mt-5\">\n      <Main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home></Home>\n          </Route>\n          <Route path=\"/home\">\n            <Home></Home>\n          </Route>\n          <Route exact path=\"/register\">\n            <RegistrationPage></RegistrationPage>\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage></LoginPage>\n          </Route>\n          <Route path=\"/profile\">\n            <CustomerProfile></CustomerProfile>\n          </Route>\n          <Route path=\"/rs\">\n            <RegistrationSuccessful></RegistrationSuccessful>\n          </Route>\n          <Route path=\"/applyLoan\">\n            <ApplyLoanPage></ApplyLoanPage>\n          </Route>\n          <Route path=\"/updateProfile\">\n            <UpdateCustomerDetailsPage></UpdateCustomerDetailsPage>\n          </Route>\n          <Route exact path=\"/logout\">\n            <LogoutPage></LogoutPage>\n          </Route>\n        </Switch>\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\RegistrationPage.js",["101","102"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { registerUser } from '../store/services/userService';\r\nconst RegistrationPage = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [nameInput, setNameInput] = useState();\r\n    const [emailInput, setEmailInput] = useState();\r\n    const [usernameInput, setUsernameInput] = useState();\r\n    const [passwordInput, setPasswordInput] = useState();\r\n    const [countryInput, setCountryInput] = useState('india');\r\n    const [accountType, setAccountType] = useState();\r\n    const [gender, setGender] = useState();\r\n    const [dob, setDob] = useState();\r\n    const [maritalStatus, setMaritalStatus] = useState();\r\n    const [contactInput, setContactInput] = useState(0)\r\n    const [guardianType, setGuardianType] = useState();\r\n    const [guardianName, setGuardianName] = useState();\r\n    const [customerState, setCustomerState] = useState();\r\n    const [addressInput, setAddressInput] = useState()\r\n    const [branchNameInput, setBranchName] = useState()\r\n    const [citizenshipInput, setCitizenshipInput] = useState()\r\n    const [citizenshipStatus, setCitizenshipStatus] = useState()\r\n    const [referenceAccHolderAddress, setReferenceAccHolderAddress] = useState()\r\n    const [referenceAccNumber, setReferenceAccNumber] = useState()\r\n    const [referenceAccHolderName, setReferenceAccHolderName] = useState()\r\n    const [identificationDocumentNo, setIdentificationDocumentNo] = useState()\r\n    const [identificationProofType, setIdentificationProofType] = useState()\r\n    const [depositAmount, setDepositAmount] = useState(5000);\r\n    const [registrationDate, setRegistrationDate] = useState(new Date());\r\n    const [ageInput, setAgeInput] = useState();\r\n    const [regId, setRegId] = useState();\r\n    const [accountNo, setAccountNo] = useState();\r\n\r\n    const generate = (n) => {\r\n        var add = 1, max = 12 - add;   // 12 is the min safe number Math.random() can generate without it starting to pad the end with zeros.   \r\n\r\n        if (n > max) {\r\n            return generate(max) + generate(n - max);\r\n        }\r\n\r\n        max = Math.pow(10, n + add);\r\n        var min = max / 10; // Math.pow(10, n) basically\r\n        var number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n        return (\"\" + number).substring(add);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        await setRegId(generate(9));\r\n        await setAccountNo(generate(16));\r\n        console.log('regId : ', regId);\r\n        console.log('account No : ', accountNo);\r\n    }, [])\r\n\r\n    let indianStates = [\"Andaman and Nicobar Islands\", \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chandigarh\", \"Chhattisgarh\", \"Dadra and Nagar Haveli\", \"Daman and Diu\", \"Delhi\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Lakshadweep\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Orissa\", \"Pondicherry\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Tripura\", \"Uttaranchal\", \"Uttar Pradesh\", \"West Bengal\"];\r\n    let spainStates = [\"Barcelona\", \"Madrid\", \"Sevilla\", \"Malaga\", \"Cadiz\", \"Zaragoza\", \"Granada\", \"Valencia\", \"Cordoba\", \"Girona\", \"Almeria\", \"Toledo\"];\r\n\r\n\r\n    const formHandler = async (event) => {\r\n        event.preventDefault();\r\n        let nameRegex = /^[a-zA-Z\\s]*$/;\r\n        if (nameInput.trim() === '' || !nameRegex.test(nameInput)) {\r\n            document.getElementById(\"nameWarning\").style.display = \"block\";\r\n            document.getElementById(\"nameWarning\").innerHTML = \"Incorrect name!!! It should only contain letters and spaces\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"nameWarning\").style.display = \"none\";\r\n        }\r\n\r\n        if (usernameInput.trim() === '' || !nameRegex.test(usernameInput)) {\r\n            document.getElementById(\"usernameWarning\").style.display = \"block\";\r\n            document.getElementById(\"usernameWarning\").innerHTML = \"Incorrect usernname!!! It should only contain letters and spaces\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"usernameWarning\").style.display = \"none\";\r\n        }\r\n        let emailRegex = /^[a-zA-z0-9]+@.+\\..+$/;\r\n\r\n        if (emailInput.trim() === '' || !emailRegex.test(emailInput)) {\r\n            document.getElementById(\"emailWarning\").style.display = \"block\";\r\n            document.getElementById(\"emailWarning\").innerHTML = \"Incorrect email !!!\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"emailWarning\").style.display = \"none\";\r\n        }\r\n        if (contactInput.trim().length !== 10) {\r\n            document.getElementById(\"contactWarning\").style.display = \"block\";\r\n            document.getElementById(\"contactWarning\").innerHTML = contactInput.trim().length + \" Incorrect contact !!! Length must be exact 10\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"contactWarning\").style.display = \"none\";\r\n        }\r\n\r\n        let idDocNumRegex = /^[a-zA-Z0-9]*$/;\r\n\r\n        if (identificationDocumentNo.trim().length !== 12 || !idDocNumRegex.test(identificationDocumentNo)) {\r\n            document.getElementById(\"documentNumber\").style.display = \"block\";\r\n            document.getElementById(\"documentNumber\").innerHTML = \"Invalid Document Number !!! It should only contain letters and digits\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"documentNumber\").style.display = \"none\";\r\n        }\r\n\r\n        if (ageInput < 18 || ageInput > 96) {\r\n            document.getElementById(\"ageWarning\").style.display = \"block\";\r\n            document.getElementById(\"ageWarning\").innerHTML = \"Invalid Age  !!! It should be greater than 17 and less than 96\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"ageWarning\").style.display = \"none\";\r\n        }\r\n\r\n        if (ageInput < 18) {\r\n            await setCitizenshipStatus(\"Minor\");\r\n        }\r\n        if (ageInput <= 60 && ageInput > 18) {\r\n            await setCitizenshipStatus(\"Normal\");\r\n        }\r\n        if (ageInput > 60) {\r\n            await setCitizenshipStatus(\"Senior\");\r\n        }\r\n\r\n        let customer = {\r\n            fullName: nameInput,\r\n            email: emailInput,\r\n            username: usernameInput,\r\n            password: passwordInput,\r\n            dob: dob,\r\n            age: ageInput,\r\n            gender: gender,\r\n            maritalStatus: maritalStatus,\r\n            contact: contactInput,\r\n            guardianType: guardianType,\r\n            guardianName: guardianName,\r\n            address: addressInput,\r\n            citizenship: citizenshipInput,\r\n            country: countryInput,\r\n            state: customerState,\r\n            citizenshipStatus: citizenshipStatus,\r\n            registrationDate: registrationDate,\r\n            accountType: accountType,\r\n            branchName: branchNameInput,\r\n            depositAmount: depositAmount,\r\n            identificationProofType: identificationProofType,\r\n            identificationDocumentNo: identificationDocumentNo,\r\n            referenceAccHolderName: referenceAccHolderName,\r\n            referenceAccNumber: referenceAccNumber,\r\n            referenceAccHolderAddress: referenceAccHolderAddress,\r\n            accountNo: accountNo,\r\n            regId: regId\r\n\r\n        }\r\n\r\n        console.log(customer);\r\n\r\n        props.dispatch(registerUser(customer));\r\n        history.push('/login');\r\n    }\r\n\r\n    const checkDate = (e) => {\r\n        console.log(e.target.value);\r\n\r\n        let curr = new Date();\r\n        curr.setDate(curr.getDate() + 0);\r\n        let date = curr.toISOString().substr(0, 10);\r\n        console.log(new Date(e.target.value).getTime(), \" \", new Date(date).getTime());\r\n        console.log('diff = ', new Date(e.target.value) - new Date(date).getTime())\r\n        if (new Date(e.target.value) - new Date(date).getTime() > 0) {\r\n            document.getElementById(\"ageWarning\").style.display = \"block\";\r\n            document.getElementById(\"ageWarning\").style.background = \"yellow\";\r\n            document.getElementById(\"ageWarning\").innerHTML = \"Date is Not correct\";\r\n            document.getElementById(\"submitBtn\").disabled = true;\r\n        }\r\n        else {\r\n            document.getElementById(\"ageWarning\").style.display = \"none\";\r\n            document.getElementById(\"submitBtn\").disabled = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let currentDate = new Date();\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <p>Registration Id : {regId} </p>\r\n            <form onSubmit={formHandler} className=\"form-group\">\r\n                {\r\n                    <Fragment>\r\n                        {/**1 */}\r\n                        <label htmlFor=\"full-name\">Name</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            defaultValue={nameInput}\r\n                            placeholder=\"Enter Your Full Name\"\r\n                            onChange={(e) => setNameInput(e.target.value)}\r\n                            name=\"fullName\"\r\n\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"nameWarning\"></p>\r\n                        {/**10 */}\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            defaultValue={emailInput}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            onChange={(e) => { setEmailInput(e.target.value) }}\r\n                            name=\"email\"\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"emailWarning\"></p>\r\n                        {/**2 */}\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            className=\"form-control\"\r\n                            defaultValue={usernameInput}\r\n                            onChange={(e) => { setUsernameInput(e.target.value) }}\r\n                            placeholder=\"Enter Login Name (username)\"\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"usernameWarning\"></p>\r\n                        {/**3 */}\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            defaultValue={passwordInput}\r\n                            onChange={(e) => setPasswordInput(e.target.value)}\r\n                            placeholder=\"Enter Your Password for Login\"\r\n                            minLength=\"8\"\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"passwordWarning\"></p>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <label htmlFor=\"dob\">Date of Birth</label>{/* 14 , date of birth DD/MM/YYYY ,  side age check for minor */}\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"dob\"\r\n                                    defaultValue={dob}\r\n                                    type=\"date\"\r\n                                    max={currentDate.getTime()}\r\n                                    onChange={(e) => {\r\n                                        setDob(e.target.value);\r\n                                        let diff = Date.now() - new Date(e.target.value).getTime();\r\n                                        let ageDiff = new Date(diff);\r\n                                        let yearAge = ageDiff.getUTCFullYear();\r\n                                        let age = Math.abs(yearAge - 1970);\r\n                                        setAgeInput(age);\r\n                                        if (age < 18) {\r\n                                             setCitizenshipStatus(\"Minor\");\r\n                                        }\r\n                                        if (age <= 60 && ageInput > 18) {\r\n                                             setCitizenshipStatus(\"Normal\");\r\n                                        }\r\n                                        if (age > 60) {\r\n                                             setCitizenshipStatus(\"Senior\");\r\n                                        }\r\n                                    }}\r\n                                    onBlur={checkDate}\r\n                                    required />\r\n                                <p className=\"text-danger\" id=\"ageWarning\"></p>\r\n                            </div>\r\n                            <p className=\"text-danger\" id=\"dobWarning\"></p>\r\n                            <div className=\"col-md-4\">\r\n                                <label htmlFor=\"gender\">Gender</label>{/* gender 11*/}\r\n                                <select name=\"gender\" id=\"gender\" onChange={(e) => setGender(e.target.value)}>\r\n                                    <option value=\"female\" selected={(gender === 'female')}>Female</option>\r\n                                    <option value=\"male\" selected={(gender === 'male')}>Male</option>\r\n                                    <option value=\"other\" selected={(gender === 'other')}>Other</option>\r\n                                </select>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <label htmlFor=\"marital-status\">Marital Status</label>{/*marital status 12 */}\r\n                                <select name=\"marital-status\" id=\"marital-status\" onChange={(e) => setMaritalStatus(e.target.value)}>\r\n                                    <option value=\"single\" selected={(maritalStatus === 'single')}>Single</option>\r\n                                    <option value=\"married\" selected={(maritalStatus === 'married')}>Married</option>\r\n                                    <option value=\"divorce\" selected={(maritalStatus === 'divorce')}>Divorce</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/**13 */}\r\n                        <label htmlFor=\"contact\">Contact</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            defaultValue={contactInput}\r\n                            onChange={(e) => { setContactInput(e.target.value) }}\r\n                            name=\"contact\"\r\n                            minLength=\"10\"\r\n                            placeholder=\"Enter Your Contact Number\"\r\n                            id=\"contact\" required />\r\n                        <p className=\"text-danger\" id=\"contactWarning\"></p>\r\n                    </Fragment>\r\n                }\r\n\r\n\r\n                {\r\n                    <Fragment>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                {/* guardian type 4 */}\r\n                                <label htmlFor=\"guardian-type\">Guardian Type</label>\r\n                                <br></br>\r\n                                <select name=\"guardian-type\" id=\"guardian-type\"\r\n                                    onChange={(e) => setGuardianType(e.target.value)}>\r\n                                    <option value=\"local\" selected={(guardianType === 'local')}>Option 1</option>\r\n                                    <option value=\"parental\" selected={(guardianType === 'parental')}>Option 2</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                {/**5 */}\r\n                                <label htmlFor=\"guardian-name\">Guardian Name</label>\r\n                                <input type=\"text\"\r\n                                    name=\"guardian-name\"\r\n                                    defaultValue={guardianName}\r\n                                    onChange={(e) => { setGuardianName(e.target.value) }}\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Enter Your Guardian Name\"\r\n                                    required />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/**6 */}\r\n                        <label htmlFor=\"address\">Address</label>\r\n                        <input type=\"text\"\r\n                            name=\"address\"\r\n                            defaultValue={addressInput}\r\n                            onChange={(e) => setAddressInput(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Full Address with PinCode\"\r\n                            required />\r\n\r\n                        {/**7 */}\r\n                        <label htmlFor=\"citizenship\"></label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"citizenship\"\r\n                            defaultValue={citizenshipInput}\r\n                            onChange={(e) => { setCitizenshipInput(e.target.value) }}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Citizenship\"\r\n                            required />\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"country-name\">Country</label>\r\n                                {/**9 */}\r\n                                <select name=\"country-name\" required onChange={(e) => setCountryInput(e.target.value)}>\r\n                                    <option value=\"india\" selected={(countryInput === 'india')}>India</option>\r\n                                    <option value=\"spain\" selected={(countryInput === 'spain')}>Spain</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                {/** 8  ,state dropdown based on country */}\r\n                                <label htmlFor=\"states\">State</label>\r\n                                <select name=\"states\" id=\"states\" onChange={(e) => setCustomerState(e.target.value)}>\r\n\r\n                                    {\r\n                                        (countryInput === 'india') &&\r\n                                        <Fragment>\r\n                                            {indianStates.map((state, index) => <option key={index} value={index} selected={(customerState === state)}>{state}</option>)}\r\n                                        </Fragment>\r\n                                    }\r\n                                    {\r\n                                        (countryInput === 'spain') &&\r\n                                        <Fragment>\r\n                                            {spainStates.map((state, index) => <option key={index} value={index} selected={(customerState === state)}>{state}</option>)}\r\n                                        </Fragment>\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/**18  */}\r\n                       <br></br>\r\n                       <hr></hr>\r\n                    </Fragment>\r\n                }\r\n\r\n                {\r\n                    <Fragment>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n\r\n                                {/* 15 Registration Date- Represents the customer registration Date \r\n                         which is automatically populated from the system current date  */}\r\n                                <label htmlFor=\"registration-date\">Registration Date</label>\r\n                                <input\r\n                                    defaultValue={registrationDate}\r\n                                    onChange={(e) => {\r\n                                        let curr = new Date();\r\n                                        curr.setDate(curr.getDate() + 1);\r\n                                        let date = curr.toISOString().substr(0, 10);\r\n                                        console.log(new Date(e.target.value).getTime(), \" \", new Date(date).getTime());\r\n                                        console.log('diff = ', new Date(e.target.value) - new Date(date).getTime())\r\n                                        if (new Date(e.target.value) - new Date(date).getTime() < 0) {\r\n                                            document.getElementById(\"dateWarning\").style.display = \"block\";\r\n                                            document.getElementById(\"dateWarning\").style.background = \"yellow\";\r\n                                            document.getElementById(\"dateWarning\").innerHTML = \"Date is Not correct\";\r\n                                            document.getElementById(\"submitBtn\").disabled = true;\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById(\"dateWarning\").style.display = \"none\";\r\n                                            document.getElementById(\"submitBtn\").disabled = false;\r\n                                        }\r\n\r\n                                        setRegistrationDate(e.target.value)\r\n                                    }\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    onBlur={checkDate}\r\n                                    name=\"registration-date\"\r\n                                    required />\r\n                                <br></br>\r\n                                <p id=\"dateWarning\" className=\"text-danger\"></p>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"account-type\">Account Type</label><br></br>\r\n                                {/** 16 , account type options=salary/savings*/}\r\n                                <select name=\"account-type\" id=\"account-type\"\r\n                                    onChange={async (e) => {\r\n                                        await setAccountType(e.target.value);\r\n                                        if(e.target.value===\"savings\")\r\n                                        {\r\n                                           await setDepositAmount(5000);\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                           await setDepositAmount(0);\r\n                                        }\r\n                                        \r\n                                    }}>\r\n\r\n                                    <option value=\"savings\" selected={(accountType === 'savings')}>Savings</option>\r\n                                    <option value=\"salary\" selected={(accountType === 'salary')}>Salary</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/**17 ,  */}\r\n                        <label htmlFor=\"branch-name\">Branch Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"branch-name\"\r\n                            default={branchNameInput}\r\n                            onChange={(e) => setBranchName(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Branch Name\"\r\n                            required />\r\n\r\n                        {/**19 */}{/**set it according to account type */}\r\n\r\n                        {/**20 */}\r\n                        <label htmlFor=\"identification-proof-type\">Identification Proof Type</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"identification-proof-type\"\r\n                            defaultValue={identificationProofType}\r\n                            onChange={(e) => setIdentificationProofType(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Identification Proof Type\"\r\n                            required />\r\n\r\n\r\n                        {/**21 */}\r\n                        <label htmlFor=\"identification-document-no\">Identification Document No </label>\r\n                        <input\r\n                            defaultValue={identificationDocumentNo}\r\n                            onChange={(e) => setIdentificationDocumentNo(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Identification Document No.\"\r\n                            name=\"identification-document-no\">\r\n                        </input>\r\n                        <p className=\"text-danger\" id=\"documentNumber\"></p>\r\n\r\n                        <label htmlFor=\"reference-acc-holder-name\">Reference Account Holder Name</label>\r\n                        <input\r\n                            defaultValue={referenceAccHolderName}\r\n                            onChange={(e) => setReferenceAccHolderName(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Reference account holder name\"\r\n                            name=\"reference-acc-holder-name\" required />\r\n\r\n                        <label htmlFor=\"reference-acc-no\">Reference Account Holder Account Number</label>\r\n                        <input\r\n                            defaultValue={referenceAccNumber}\r\n                            onChange={(e) => setReferenceAccNumber(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            placeholder=\"Enter Reference account holder acc. No.\"\r\n                            name=\"reference-acc-no\"\r\n                            required />\r\n\r\n\r\n                        <label htmlFor=\"reference-acc-address\">Reference Account Holder Address</label>\r\n                        <input\r\n                            defaultValue={referenceAccHolderAddress}\r\n                            onChange={(e) => setReferenceAccHolderAddress(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Reference account holder address\"\r\n                            name=\"reference-acc-address\" required />\r\n                    </Fragment>\r\n                }\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\"><button id=\"submitBtn\" className=\"btn btn-success\"> Submit</button></div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegistrationPage);\r\n","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\Main.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\Header.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\Footer.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\layout\\MenuNavigation.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\RegistrationSuccessful.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\reducers\\index.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\LoginPage.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\reducers\\userReducers.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\actions\\userActions.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\store\\services\\userService.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\CustomerProfile.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\customer\\Loans.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\components\\customer\\Customer.js",["103"],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\ApplyLoanPage.js",["104"],"import React, { useState } from 'react'\r\nimport PersonalLoan from '../containers/PersonalLoan';\r\nimport EducationLoan from '../containers/EducationLoan';\r\nconst ApplyLoanPage = () => {\r\n\r\n    const [loanType, setLoanType] = useState(\"educational\");\r\n    const [loanAmount, setLoanAmount] = useState(10);\r\n    const [loanApplyDate, setLoanApplyDate] = useState();\r\n    const [issueDate, setIssueDate] = useState()\r\n    const [rateOfInterest, setRateOfInterest] = useState(6);\r\n    const [durationInput, setDurationInput] = useState(5);\r\n    const [loan, setLoan] = useState();\r\n\r\n    const imgStyle = {\r\n        display: \"none\"\r\n    }\r\n\r\n    const formSubmitHanlder = (e) => {\r\n        e.preventDefault();\r\n        let obj = {\r\n            loanType: loanType,\r\n            loanAmount: loanAmount,\r\n            loanApplyDate: loanApplyDate,\r\n            issueDate: issueDate,\r\n            rateOfInterest: rateOfInterest,\r\n            durationInput: durationInput,\r\n\r\n\r\n        }\r\n        setLoan(obj);\r\n        document.getElementById(\"nextImg\").style.display = \"block\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5 bg-dark text-white\">\r\n            <form className=\"from-group\" onSubmit={formSubmitHanlder}>\r\n                <br></br>\r\n                <label htmlFor=\"loan-type\">Loan Type</label>\r\n                <select name=\"loan-type\" id=\"loan-type\" onChange={(e) => {\r\n                    setLoanType(e.target.value)\r\n                    setRateOfInterest(e.target.value === \"educational\" ? 6 : 12)\r\n                }\r\n                }>\r\n                    <option value='educational' selected={loanType === 'educational'}>Eductional</option>\r\n                    <option value='personal' selected={loanType === 'personal'}>Personal/Home</option>\r\n                </select>\r\n                <br></br>\r\n                <br></br>\r\n                <label htmlFor=\"loanAmount\">Loan Amount</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    defaultValue={loanAmount}\r\n                    onChange={(e) => { setLoanAmount(e.target.value) }}\r\n                    type=\"number\"\r\n                    name=\"loanAmount\"\r\n                    min=\"1\"\r\n                    placeholder=\"Loan Amount\" required />\r\n\r\n                <br></br>\r\n                <label htmlFor=\"applyDate\">Apply Date</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    defaultValue={loanApplyDate}\r\n                    required\r\n                    name=\"applyDate\"\r\n                    id=\"applyDate\"\r\n                    onChange={(e) => {\r\n\r\n                        let curr = new Date();\r\n                        curr.setDate(curr.getDate() + 1);\r\n                        let date = curr.toISOString().substr(0, 10);\r\n                        console.log(new Date(e.target.value).getTime(), \" \", new Date(date).getTime());\r\n                        console.log('diff = ', new Date(e.target.value) - new Date(date).getTime())\r\n                        if (new Date(e.target.value) - new Date(date).getTime() < 0) {\r\n                            document.getElementById(\"dateWarning\").style.display = \"block\";\r\n                            document.getElementById(\"dateWarning\").style.background = \"yellow\";\r\n                            document.getElementById(\"dateWarning\").innerHTML = \"Date is Not correct\";\r\n                            document.getElementById(\"submitBtn\").disabled = true;\r\n                        }\r\n                        else {\r\n                            document.getElementById(\"dateWarning\").style.display = \"none\";\r\n                            document.getElementById(\"submitBtn\").disabled = false;\r\n                        }\r\n                        setLoanApplyDate(e.target.value);\r\n                    }}\r\n                />\r\n                <p className=\"text-danger\" id=\"dateWarning\"></p>\r\n\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <label htmlFor=\"issueDate\">Issue Date</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    defaultValue={issueDate}\r\n                    onChange={(e) => setIssueDate(e.target.value)}\r\n                    name=\"issueDate\"\r\n                    id=\"issueDate\" />\r\n                <br></br>\r\n                <p className=\"text-warning\">The rate of interest is based on Bank Policy and Loan type</p>\r\n                <h4>\r\n                    Rate of Interest :=<i className=\"text-success\">{rateOfInterest}%</i>\r\n                </h4>\r\n\r\n                <br></br>\r\n                <label htmlFor=\"duration\">Duration of Loan</label>\r\n                <select name=\"duration\" id=\"duration\" onChange={(e) => { setDurationInput(e.target.value); }}>\r\n                    <option value=\"5\" selected={durationInput === '5'}>5</option>\r\n                    <option value=\"10\" selected={durationInput === '10'}>10</option>\r\n                    <option value=\"15\" selected={durationInput === '15'}>15</option>\r\n                    <option value=\"20\" selected={durationInput === '20'}>20</option>\r\n\r\n                </select>\r\n\r\n                <br></br>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-2\">\r\n                        <button id=\"submitBtn\" className=\"btn btn-primary\">Next</button>\r\n                        <img width=\"40\" height=\"90\" style={imgStyle} id=\"nextImg\" className=\"img-responsive\" atl=\"next\" src=\"https://cdn.onlinewebfonts.com/svg/img_71602.png\"></img>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n            </form>\r\n            {\r\n                (loanType === \"educational\" && loan) && (\r\n                    <EducationLoan loan={loan}></EducationLoan>\r\n                )\r\n            }\r\n            {\r\n                (loanType === \"personal\" && loan) && (\r\n                    <PersonalLoan loan={loan}></PersonalLoan>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplyLoanPage\r\n","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\containers\\PersonalLoan.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\containers\\EducationLoan.js",[],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\UpdateCustomerDetailsPage.js",["105"],"G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\Home.js",["106"],"import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container-fluid mt-5 bg-dark text-white homeCon\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-2\">\r\n                    <p className=\"text-center text-decoration-underline\">Login</p>\r\n                    <Link className=\"btn bg-success\" to=\"/login\">\r\n                        <img className=\"img-fluid\" width=\"180\" height=\"180\" alt=\"login\"\r\n                            src=\"\r\n                            https://lh3.googleusercontent.com/proxy/B6agflpQNSpi9pPcaAXukv4xy3oHQhCnls_elLc8bVqpu3OfbM-E04JBjHMvr-dUX_APox4uAtdDSS9CYDLpP7vDm830rzOcxA\r\n                            \" \r\n                            />\r\n\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <br></br>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-md-2\">\r\n                <p className=\"text-center text-decoration-underline\">Register</p>\r\n                    <Link className=\"btn bg-primary\" to=\"/register\">\r\n                        <img className=\"img-fluid\" width=\"180\" height=\"180\" alt=\"register\"\r\n                            src=\"https://miro.medium.com/max/498/1*Es2vCEieszU7QQqsLChl6A.png\" />\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","G:\\ProjectWork\\Cognizant\\DeltaLearning\\ReactCaseStudyMay2021\\bms\\src\\pages\\LogoutPage.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"115","line":2,"column":18,"nodeType":"113","messageId":"114","endLine":2,"endColumn":22},{"ruleId":"111","severity":1,"message":"116","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"117","line":30,"column":9,"nodeType":"113","messageId":"114","endLine":30,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":51,"column":15,"nodeType":"120","endLine":56,"endColumn":6},{"ruleId":"118","severity":1,"message":"121","line":56,"column":8,"nodeType":"122","endLine":56,"endColumn":10,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"124","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":122,"column":25,"nodeType":"127","endLine":122,"endColumn":176},{"ruleId":"118","severity":1,"message":"128","line":52,"column":8,"nodeType":"122","endLine":52,"endColumn":10,"suggestions":"129"},{"ruleId":"111","severity":1,"message":"130","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'accountNo', 'generate', and 'regId'. Either include them or remove the dependency array.","ArrayExpression",["133"],"'Fragment' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.state.users.loggedInUser' and 'props.state.users.users'. Either include them or remove the dependency array.",["134"],"'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [accountNo, generate, regId]",{"range":"139","text":"140"},"Update the dependencies array to be: [props.state.users.loggedInUser, props.state.users.users]",{"range":"141","text":"142"},[2620,2622],"[accountNo, generate, regId]",[2299,2301],"[props.state.users.loggedInUser, props.state.users.users]"]