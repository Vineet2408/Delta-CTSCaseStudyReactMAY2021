{"ast":null,"code":"var _jsxFileName = \"G:\\\\ProjectWork\\\\Cognizant\\\\DeltaLearning\\\\ReactCaseStudyMay2021\\\\bms\\\\src\\\\pages\\\\RegistrationPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { registerUser } from '../store/services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationPage = props => {\n  _s();\n\n  const history = useHistory();\n  const [nameInput, setNameInput] = useState();\n  const [emailInput, setEmailInput] = useState();\n  const [usernameInput, setUsernameInput] = useState();\n  const [passwordInput, setPasswordInput] = useState();\n  const [countryInput, setCountryInput] = useState();\n  const [accountType, setAccountType] = useState();\n  const [gender, setGender] = useState();\n  const [dob, setDob] = useState();\n  const [maritalStatus, setMaritalStatus] = useState();\n  const [contactInput, setContactInput] = useState(0);\n  const [guardianType, setGuardianType] = useState();\n  const [guardianName, setGuardianName] = useState();\n  const [customerState, setCustomerState] = useState();\n  const [addressInput, setAddressInput] = useState();\n  const [branchNameInput, setBranchName] = useState();\n  const [citizenshipInput, setCitizenshipInput] = useState();\n  const [citizenshipStatus, setCitizenshipStatus] = useState();\n  const [referenceAccHolderAddress, setReferenceAccHolderAddress] = useState();\n  const [referenceAccNumber, setReferenceAccNumber] = useState();\n  const [referenceAccHolderName, setReferenceAccHolderName] = useState();\n  const [identificationDocumentNo, setIdentificationDocumentNo] = useState();\n  const [identificationProofType, setIdentificationProofType] = useState();\n  const [depositAmount, setDepositAmount] = useState(0);\n  const [registrationDate, setRegistrationDate] = useState(new Date());\n  const [ageInput, setAgeInput] = useState();\n  const [regId, setRegId] = useState();\n\n  const generate = n => {\n    var add = 1,\n        max = 12 - add; // 12 is the min safe number Math.random() can generate without it starting to pad the end with zeros.   \n\n    if (n > max) {\n      return generate(max) + generate(n - max);\n    }\n\n    max = Math.pow(10, n + add);\n    var min = max / 10; // Math.pow(10, n) basically\n\n    var number = Math.floor(Math.random() * (max - min + 1)) + min;\n    return (\"\" + number).substring(add);\n  };\n\n  useEffect(() => {\n    setRegId;\n  }, []);\n  let indianStates = [\"Andaman and Nicobar Islands\", \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chandigarh\", \"Chhattisgarh\", \"Dadra and Nagar Haveli\", \"Daman and Diu\", \"Delhi\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Lakshadweep\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Orissa\", \"Pondicherry\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Tripura\", \"Uttaranchal\", \"Uttar Pradesh\", \"West Bengal\"];\n  let spainStates = [\"Barcelona\", \"Madrid\", \"Sevilla\", \"Malaga\", \"Cadiz\", \"Zaragoza\", \"Granada\", \"Valencia\", \"Cordoba\", \"Girona\", \"Almeria\", \"Toledo\"];\n\n  const formHandler = event => {\n    event.preventDefault();\n    let nameRegex = /^[a-zA-Z\\s]*$/;\n\n    if (nameInput.trim() === '' || !nameRegex.test(nameInput)) {\n      document.getElementById(\"nameWarning\").style.display = \"block\";\n      document.getElementById(\"nameWarning\").innerHTML = \"Incorrect name!!! It should only contain letters and spaces\";\n      return;\n    } else {\n      document.getElementById(\"nameWarning\").style.display = \"none\";\n    }\n\n    if (usernameInput.trim() === '' || !nameRegex.test(usernameInput)) {\n      document.getElementById(\"usernameWarning\").style.display = \"block\";\n      document.getElementById(\"usernameWarning\").innerHTML = \"Incorrect usernname!!! It should only contain letters and spaces\";\n      return;\n    } else {\n      document.getElementById(\"usernameWarning\").style.display = \"none\";\n    }\n\n    let emailRegex = /^[a-zA-z0-9]+@.+\\..+$/;\n\n    if (emailInput.trim() === '' || !emailRegex.test(emailInput)) {\n      document.getElementById(\"emailWarning\").style.display = \"block\";\n      document.getElementById(\"emailWarning\").innerHTML = \"Incorrect email !!!\";\n      return;\n    } else {\n      document.getElementById(\"emailWarning\").style.display = \"none\";\n    }\n\n    if (contactInput.trim().length !== 10) {\n      document.getElementById(\"contactWarning\").style.display = \"block\";\n      document.getElementById(\"contactWarning\").innerHTML = contactInput.trim().length + \" Incorrect contact !!! Length must be exact 10\";\n      return;\n    } else {\n      document.getElementById(\"contactWarning\").style.display = \"none\";\n    }\n\n    let idDocNumRegex = /^[a-zA-Z0-9]*$/;\n\n    if (identificationDocumentNo.trim().length !== 12 || !idDocNumRegex.test(identificationDocumentNo)) {\n      document.getElementById(\"documentNumber\").style.display = \"block\";\n      document.getElementById(\"documentNumber\").innerHTML = \"Invalid Document Number !!! It should only contain letters and digits\";\n      return;\n    } else {\n      document.getElementById(\"documentNumber\").style.display = \"none\";\n    }\n\n    if (ageInput < 18 || ageInput > 96) {\n      document.getElementById(\"ageWarning\").style.display = \"block\";\n      document.getElementById(\"ageWarning\").innerHTML = \"Invalid Age  !!! It should be greater than 17 and less than 96\";\n      return;\n    } else {\n      document.getElementById(\"ageWarning\").style.display = \"none\";\n    }\n\n    let customer = {\n      fullName: nameInput,\n      email: emailInput,\n      username: usernameInput,\n      password: passwordInput,\n      dob: dob,\n      age: ageInput,\n      gender: gender,\n      maritalStatus: maritalStatus,\n      contact: contactInput,\n      guardianType: guardianType,\n      guardianName: guardianName,\n      address: addressInput,\n      citizenship: citizenshipInput,\n      country: countryInput,\n      state: customerState,\n      citizenshipStatus: citizenshipStatus,\n      registrationDate: registrationDate,\n      accountType: accountType,\n      branchName: branchNameInput,\n      depositAmount: depositAmount,\n      identificationProofType: identificationProofType,\n      identificationDocumentNo: identificationDocumentNo,\n      referenceAccHolderName: referenceAccHolderName,\n      referenceAccNumber: referenceAccNumber,\n      referenceAccHolderAddress: referenceAccHolderAddress\n    };\n    console.log(customer);\n    props.dispatch(registerUser(customer));\n    history.push('/rs');\n  };\n\n  const checkDate = event => {\n    console.log(event.target.value);\n  };\n\n  let currentDate = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formHandler,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"full-name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          defaultValue: nameInput,\n          placeholder: \"Enter Your Full Name\",\n          onChange: e => setNameInput(e.target.value),\n          name: \"fullName\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          id: \"nameWarning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          defaultValue: emailInput,\n          placeholder: \"Enter Your Email Address\",\n          onChange: e => {\n            setEmailInput(e.target.value);\n          },\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          id: \"emailWarning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          className: \"form-control\",\n          defaultValue: usernameInput,\n          onChange: e => {\n            setUsernameInput(e.target.value);\n          },\n          placeholder: \"Enter Login Name (username)\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          id: \"usernameWarning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          className: \"form-control\",\n          defaultValue: passwordInput,\n          onChange: e => setPasswordInput(e.target.value),\n          placeholder: \"Enter Your Password for Login\",\n          minLength: \"8\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          id: \"passwordWarning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dob\",\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              name: \"dob\",\n              defaultValue: dob,\n              type: \"date\",\n              max: currentDate.getTime(),\n              onChange: e => {\n                setDob(e.target.value);\n                let diff = Date.now() - new Date(e.target.value).getTime();\n                let ageDiff = new Date(diff);\n                let yearAge = ageDiff.getUTCFullYear();\n                let age = Math.abs(yearAge - 1970);\n                setAgeInput(age);\n              },\n              onBlur: checkDate,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              id: \"ageWarning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            id: \"dobWarning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"gender\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"gender\",\n              id: \"gender\",\n              onChange: e => setGender(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"female\",\n                selected: gender === 'female',\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"male\",\n                selected: gender === 'male',\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"other\",\n                selected: gender === 'other',\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"marital-status\",\n              children: \"Marital Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"marital-status\",\n              id: \"marital-status\",\n              onChange: e => setMaritalStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"single\",\n                selected: maritalStatus === 'single',\n                children: \"Single\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"married\",\n                selected: maritalStatus === 'married',\n                children: \"Married\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"divorce\",\n                selected: maritalStatus === 'divorce',\n                children: \"Divorce\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contact\",\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          defaultValue: contactInput,\n          onChange: e => {\n            setContactInput(e.target.value);\n          },\n          name: \"contact\",\n          minLength: \"10\",\n          placeholder: \"Enter Your Contact Number\",\n          id: \"contact\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          id: \"contactWarning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"guardian-type\",\n              children: \"Guardian Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"guardian-type\",\n              id: \"guardian-type\",\n              onChange: e => setGuardianType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"local\",\n                selected: guardianType === 'local',\n                children: \"Option 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"parental\",\n                selected: guardianType === 'parental',\n                children: \"Option 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"guardian-name\",\n              children: \"Guardian Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"guardian-name\",\n              defaultValue: guardianName,\n              onChange: e => {\n                setGuardianName(e.target.value);\n              },\n              className: \"form-control\",\n              placeholder: \"Enter Your Guardian Name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\",\n          defaultValue: addressInput,\n          onChange: e => setAddressInput(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter Your Full Address with PinCode\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"citizenship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"citizenship\",\n          defaultValue: citizenshipInput,\n          onChange: e => {\n            setCitizenshipInput(e.target.value);\n          },\n          className: \"form-control\",\n          placeholder: \"Enter Your Citizenship\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"country-name\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"country-name\",\n              required: true,\n              onChange: e => setCountryInput(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"india\",\n                selected: countryInput === 'india',\n                children: \"India\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"spain\",\n                selected: countryInput === 'spain',\n                children: \"Spain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"states\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"states\",\n              id: \"states\",\n              onChange: e => setCustomerState(e.target.value),\n              children: [countryInput === 'india' && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: indianStates.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: index,\n                  selected: customerState === state,\n                  children: state\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 81\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 41\n              }, this), countryInput === 'spain' && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: spainStates.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: index,\n                  selected: customerState === state,\n                  children: state\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 80\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"citizenship-status\",\n          children: \"Citizenship Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"citizenship-status\",\n          defaultValue: citizenshipStatus,\n          onChange: e => setCitizenshipStatus(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter Your Citizen Status\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"registration-date\",\n              children: \"Registration Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              defaultValue: registrationDate,\n              onChange: e => setRegistrationDate(e.target.value),\n              className: \"form-control\",\n              type: \"date\",\n              onBlur: checkDate,\n              name: \"registration-date\",\n              value: registrationDate,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"account-type\",\n              children: \"Account Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 83\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"account-type\",\n              id: \"account-type\",\n              onChange: e => {\n                setAccountType(e.target.value);\n                setDepositAmount(accountType === 'savaings' ? 5000 : 0);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"savings\",\n                selected: accountType === 'savings',\n                children: \"Savings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"salary\",\n                selected: accountType === 'salary',\n                children: \"Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branch-name\",\n          children: \"Branch Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"branch-name\",\n          default: branchNameInput,\n          onChange: e => setBranchName(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter Your Branch Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"initial-deposit\",\n          children: \"Initial Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"initial-deposit\",\n          defaultValue: depositAmount,\n          onChange: e => setDepositAmount(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter Your Initial Deposit Amount\",\n          value: depositAmount,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"identification-proof-type\",\n          children: \"Identification Proof Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"identification-proof-type\",\n          default: identificationProofType,\n          onChange: e => setIdentificationProofType(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter Your Identification Proof Type\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"identification-document-no\",\n          children: \"Identification Document No \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          default: identificationDocumentNo,\n          onChange: e => setIdentificationDocumentNo(e.target.value),\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Identification Document No.\",\n          name: \"identification-document-no\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          id: \"documentNumber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reference-acc-holder-name\",\n          children: \"Reference Account Holder Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          default: referenceAccHolderName,\n          onChange: e => setReferenceAccHolderName(e.target.value),\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Enter Reference account holder name\",\n          name: \"reference-acc-holder-name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reference-acc-no\",\n          children: \"Reference Account Holder Account Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          default: referenceAccNumber,\n          onChange: e => setReferenceAccNumber(e.target.value),\n          className: \"form-control\",\n          type: \"number\",\n          placeholder: \"Enter Reference account holder acc. No.\",\n          name: \"reference-acc-no\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reference-acc-address\",\n          children: \"Reference Account Holder Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          default: referenceAccHolderAddress,\n          onChange: e => setReferenceAccHolderAddress(e.target.value),\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Enter Reference account holder address\",\n          name: \"reference-acc-address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            children: \" Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationPage, \"nwxJLoCzL53pQ6ND0YrnkkJKAPU=\", false, function () {\n  return [useHistory];\n});\n\n_c = RegistrationPage;\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(RegistrationPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"sources":["G:/ProjectWork/Cognizant/DeltaLearning/ReactCaseStudyMay2021/bms/src/pages/RegistrationPage.js"],"names":["React","Fragment","useState","connect","useHistory","registerUser","RegistrationPage","props","history","nameInput","setNameInput","emailInput","setEmailInput","usernameInput","setUsernameInput","passwordInput","setPasswordInput","countryInput","setCountryInput","accountType","setAccountType","gender","setGender","dob","setDob","maritalStatus","setMaritalStatus","contactInput","setContactInput","guardianType","setGuardianType","guardianName","setGuardianName","customerState","setCustomerState","addressInput","setAddressInput","branchNameInput","setBranchName","citizenshipInput","setCitizenshipInput","citizenshipStatus","setCitizenshipStatus","referenceAccHolderAddress","setReferenceAccHolderAddress","referenceAccNumber","setReferenceAccNumber","referenceAccHolderName","setReferenceAccHolderName","identificationDocumentNo","setIdentificationDocumentNo","identificationProofType","setIdentificationProofType","depositAmount","setDepositAmount","registrationDate","setRegistrationDate","Date","ageInput","setAgeInput","regId","setRegId","generate","n","add","max","Math","pow","min","number","floor","random","substring","useEffect","indianStates","spainStates","formHandler","event","preventDefault","nameRegex","trim","test","document","getElementById","style","display","innerHTML","emailRegex","length","idDocNumRegex","customer","fullName","email","username","password","age","contact","address","citizenship","country","state","branchName","console","log","dispatch","push","checkDate","target","value","currentDate","e","getTime","diff","now","ageDiff","yearAge","getUTCFullYear","abs","map","index","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,+BAA7B;;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAEhC,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,EAA5C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,EAAlD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,EAAlD;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,EAAhD;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,EAA9C;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,EAApC;AACA,QAAM,CAACqB,GAAD,EAAMC,MAAN,IAAgBtB,QAAQ,EAA9B;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,EAAlD;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,EAAhD;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,EAAhD;AACA,QAAM,CAAC+B,aAAD,EAAgBC,gBAAhB,IAAoChC,QAAQ,EAAlD;AACA,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,EAAhD;AACA,QAAM,CAACmC,eAAD,EAAkBC,aAAlB,IAAmCpC,QAAQ,EAAjD;AACA,QAAM,CAACqC,gBAAD,EAAmBC,mBAAnB,IAA0CtC,QAAQ,EAAxD;AACA,QAAM,CAACuC,iBAAD,EAAoBC,oBAApB,IAA4CxC,QAAQ,EAA1D;AACA,QAAM,CAACyC,yBAAD,EAA4BC,4BAA5B,IAA4D1C,QAAQ,EAA1E;AACA,QAAM,CAAC2C,kBAAD,EAAqBC,qBAArB,IAA8C5C,QAAQ,EAA5D;AACA,QAAM,CAAC6C,sBAAD,EAAyBC,yBAAzB,IAAsD9C,QAAQ,EAApE;AACA,QAAM,CAAC+C,wBAAD,EAA2BC,2BAA3B,IAA0DhD,QAAQ,EAAxE;AACA,QAAM,CAACiD,uBAAD,EAA0BC,0BAA1B,IAAwDlD,QAAQ,EAAtE;AACA,QAAM,CAACmD,aAAD,EAAgBC,gBAAhB,IAAoCpD,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACqD,gBAAD,EAAmBC,mBAAnB,IAA0CtD,QAAQ,CAAC,IAAIuD,IAAJ,EAAD,CAAxD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BzD,QAAQ,EAAxC;AACA,QAAM,CAAC0D,KAAD,EAAQC,QAAR,IAAoB3D,QAAQ,EAAlC;;AAEA,QAAM4D,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIC,GAAG,GAAG,CAAV;AAAA,QAAaC,GAAG,GAAG,KAAKD,GAAxB,CADoB,CACW;;AAE/B,QAAID,CAAC,GAAGE,GAAR,EAAa;AACT,aAAOH,QAAQ,CAACG,GAAD,CAAR,GAAgBH,QAAQ,CAACC,CAAC,GAAGE,GAAL,CAA/B;AACH;;AAEDA,IAAAA,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaJ,CAAC,GAAGC,GAAjB,CAAN;AACA,QAAII,GAAG,GAAGH,GAAG,GAAG,EAAhB,CARoB,CAQA;;AACpB,QAAII,MAAM,GAAGH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,MAAiBN,GAAG,GAAGG,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAA3D;AAEA,WAAO,CAAC,KAAKC,MAAN,EAAcG,SAAd,CAAwBR,GAAxB,CAAP;AACH,GAZD;;AAcAS,EAAAA,SAAS,CAAC,MAAM;AACbZ,IAAAA,QAAQ;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIa,YAAY,GAAG,CAAC,6BAAD,EAAgC,gBAAhC,EAAkD,mBAAlD,EAAuE,OAAvE,EAAgF,OAAhF,EAAyF,YAAzF,EAAuG,cAAvG,EAAuH,wBAAvH,EAAiJ,eAAjJ,EAAkK,OAAlK,EAA2K,KAA3K,EAAkL,SAAlL,EAA6L,SAA7L,EAAwM,kBAAxM,EAA4N,mBAA5N,EAAiP,WAAjP,EAA8P,WAA9P,EAA2Q,QAA3Q,EAAqR,aAArR,EAAoS,gBAApS,EAAsT,aAAtT,EAAqU,SAArU,EAAgV,WAAhV,EAA6V,SAA7V,EAAwW,UAAxW,EAAoX,QAApX,EAA8X,aAA9X,EAA6Y,QAA7Y,EAAuZ,WAAvZ,EAAoa,QAApa,EAA8a,YAA9a,EAA4b,SAA5b,EAAuc,aAAvc,EAAsd,eAAtd,EAAue,aAAve,CAAnB;AACA,MAAIC,WAAW,GAAG,CAAC,WAAD,EAAc,QAAd,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C,OAA7C,EAAsD,UAAtD,EAAkE,SAAlE,EAA6E,UAA7E,EAAyF,SAAzF,EAAoG,QAApG,EAA8G,SAA9G,EAAyH,QAAzH,CAAlB;;AAGA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,SAAS,GAAG,eAAhB;;AACA,QAAItE,SAAS,CAACuE,IAAV,OAAqB,EAArB,IAA2B,CAACD,SAAS,CAACE,IAAV,CAAexE,SAAf,CAAhC,EAA2D;AACvDyE,MAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC,CAA6CC,OAA7C,GAAuD,OAAvD;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCG,SAAvC,GAAmD,6DAAnD;AACA;AACH,KAJD,MAKK;AACDJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC,CAA6CC,OAA7C,GAAuD,MAAvD;AACH;;AAED,QAAIxE,aAAa,CAACmE,IAAd,OAAyB,EAAzB,IAA+B,CAACD,SAAS,CAACE,IAAV,CAAepE,aAAf,CAApC,EAAmE;AAC/DqE,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA3C,CAAiDC,OAAjD,GAA2D,OAA3D;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CG,SAA3C,GAAuD,kEAAvD;AACA;AACH,KAJD,MAKK;AACDJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA3C,CAAiDC,OAAjD,GAA2D,MAA3D;AACH;;AACD,QAAIE,UAAU,GAAG,uBAAjB;;AAEA,QAAI5E,UAAU,CAACqE,IAAX,OAAsB,EAAtB,IAA4B,CAACO,UAAU,CAACN,IAAX,CAAgBtE,UAAhB,CAAjC,EAA8D;AAC1DuE,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,CAA8CC,OAA9C,GAAwD,OAAxD;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCG,SAAxC,GAAoD,qBAApD;AACA;AACH,KAJD,MAKK;AACDJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,CAA8CC,OAA9C,GAAwD,MAAxD;AACH;;AACD,QAAI1D,YAAY,CAACqD,IAAb,GAAoBQ,MAApB,KAA+B,EAAnC,EAAuC;AACnCN,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C,CAAgDC,OAAhD,GAA0D,OAA1D;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CG,SAA1C,GAAsD3D,YAAY,CAACqD,IAAb,GAAoBQ,MAApB,GAA6B,gDAAnF;AACA;AACH,KAJD,MAKK;AACDN,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C,CAAgDC,OAAhD,GAA0D,MAA1D;AACH;;AAED,QAAII,aAAa,GAAG,gBAApB;;AAEA,QAAIxC,wBAAwB,CAAC+B,IAAzB,GAAgCQ,MAAhC,KAA2C,EAA3C,IAAiD,CAACC,aAAa,CAACR,IAAd,CAAmBhC,wBAAnB,CAAtD,EAAoG;AAChGiC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C,CAAgDC,OAAhD,GAA0D,OAA1D;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CG,SAA1C,GAAsD,uEAAtD;AACA;AACH,KAJD,MAKK;AACDJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C,CAAgDC,OAAhD,GAA0D,MAA1D;AACH;;AAED,QAAI3B,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAAhC,EAAoC;AAChCwB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,OAA5C,GAAsD,OAAtD;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCG,SAAtC,GAAkD,gEAAlD;AACA;AACH,KAJD,MAKK;AACDJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,OAA5C,GAAsD,MAAtD;AACH;;AAED,QAAIK,QAAQ,GAAG;AACXC,MAAAA,QAAQ,EAAElF,SADC;AAEXmF,MAAAA,KAAK,EAAEjF,UAFI;AAGXkF,MAAAA,QAAQ,EAAEhF,aAHC;AAIXiF,MAAAA,QAAQ,EAAE/E,aAJC;AAKXQ,MAAAA,GAAG,EAAEA,GALM;AAMXwE,MAAAA,GAAG,EAAErC,QANM;AAOXrC,MAAAA,MAAM,EAAEA,MAPG;AAQXI,MAAAA,aAAa,EAAEA,aARJ;AASXuE,MAAAA,OAAO,EAAErE,YATE;AAUXE,MAAAA,YAAY,EAAEA,YAVH;AAWXE,MAAAA,YAAY,EAAEA,YAXH;AAYXkE,MAAAA,OAAO,EAAE9D,YAZE;AAaX+D,MAAAA,WAAW,EAAE3D,gBAbF;AAcX4D,MAAAA,OAAO,EAAElF,YAdE;AAeXmF,MAAAA,KAAK,EAAEnE,aAfI;AAgBXQ,MAAAA,iBAAiB,EAAEA,iBAhBR;AAiBXc,MAAAA,gBAAgB,EAAEA,gBAjBP;AAkBXpC,MAAAA,WAAW,EAAEA,WAlBF;AAmBXkF,MAAAA,UAAU,EAAEhE,eAnBD;AAoBXgB,MAAAA,aAAa,EAAEA,aApBJ;AAqBXF,MAAAA,uBAAuB,EAAEA,uBArBd;AAsBXF,MAAAA,wBAAwB,EAAEA,wBAtBf;AAuBXF,MAAAA,sBAAsB,EAAEA,sBAvBb;AAwBXF,MAAAA,kBAAkB,EAAEA,kBAxBT;AAyBXF,MAAAA,yBAAyB,EAAEA;AAzBhB,KAAf;AA6BA2D,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AAEAnF,IAAAA,KAAK,CAACiG,QAAN,CAAenG,YAAY,CAACqF,QAAD,CAA3B;AACAlF,IAAAA,OAAO,CAACiG,IAAR,CAAa,KAAb;AACH,GA5FD;;AA8FA,QAAMC,SAAS,GAAI7B,KAAD,IAAW;AACzByB,IAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAK,CAAC8B,MAAN,CAAaC,KAAzB;AACH,GAFD;;AAIA,MAAIC,WAAW,GAAG,IAAIpD,IAAJ,EAAlB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEmB,WAAhB;AAA6B,MAAA,SAAS,EAAC,YAAvC;AAAA,8BAEQ,QAAC,QAAD;AAAA,gCAEI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,YAAY,EAAEnE,SAFlB;AAGI,UAAA,WAAW,EAAC,sBAHhB;AAII,UAAA,QAAQ,EAAGqG,CAAD,IAAOpG,YAAY,CAACoG,CAAC,CAACH,MAAF,CAASC,KAAV,CAJjC;AAKI,UAAA,IAAI,EAAC,UALT;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAWI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAaI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,SAAS,EAAC,cAFd;AAGI,UAAA,YAAY,EAAEjG,UAHlB;AAII,UAAA,WAAW,EAAC,0BAJhB;AAKI,UAAA,QAAQ,EAAGmG,CAAD,IAAO;AAAElG,YAAAA,aAAa,CAACkG,CAAC,CAACH,MAAF,CAASC,KAAV,CAAb;AAA+B,WALtD;AAMI,UAAA,IAAI,EAAC,OANT;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAsBI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAwBI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eAyBI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,YAAY,EAAE/F,aAJlB;AAKI,UAAA,QAAQ,EAAGiG,CAAD,IAAO;AAAEhG,YAAAA,gBAAgB,CAACgG,CAAC,CAACH,MAAF,CAASC,KAAV,CAAhB;AAAkC,WALzD;AAMI,UAAA,WAAW,EAAC,6BANhB;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eAiCI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAjCJ,eAmCI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCJ,eAoCI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,YAAY,EAAE7F,aAJlB;AAKI,UAAA,QAAQ,EAAG+F,CAAD,IAAO9F,gBAAgB,CAAC8F,CAAC,CAACH,MAAF,CAASC,KAAV,CALrC;AAMI,UAAA,WAAW,EAAC,+BANhB;AAOI,UAAA,SAAS,EAAC,GAPd;AAQI,UAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,gBApCJ,eA6CI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBA7CJ,eA+CI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,SAAS,EAAC,cADd;AAEI,cAAA,IAAI,EAAC,KAFT;AAGI,cAAA,YAAY,EAAErF,GAHlB;AAII,cAAA,IAAI,EAAC,MAJT;AAKI,cAAA,GAAG,EAAEsF,WAAW,CAACE,OAAZ,EALT;AAMI,cAAA,QAAQ,EAAGD,CAAD,IAAO;AACbtF,gBAAAA,MAAM,CAACsF,CAAC,CAACH,MAAF,CAASC,KAAV,CAAN;AACA,oBAAII,IAAI,GAAGvD,IAAI,CAACwD,GAAL,KAAa,IAAIxD,IAAJ,CAASqD,CAAC,CAACH,MAAF,CAASC,KAAlB,EAAyBG,OAAzB,EAAxB;AACA,oBAAIG,OAAO,GAAG,IAAIzD,IAAJ,CAASuD,IAAT,CAAd;AACA,oBAAIG,OAAO,GAAGD,OAAO,CAACE,cAAR,EAAd;AACA,oBAAIrB,GAAG,GAAG7B,IAAI,CAACmD,GAAL,CAASF,OAAO,GAAG,IAAnB,CAAV;AACAxD,gBAAAA,WAAW,CAACoC,GAAD,CAAX;AACH,eAbL;AAcI,cAAA,MAAM,EAAEW,SAdZ;AAeI,cAAA,QAAQ;AAfZ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAkBI;AAAG,cAAA,SAAS,EAAC,aAAb;AAA2B,cAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAqBI;AAAG,YAAA,SAAS,EAAC,aAAb;AAA2B,YAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBArBJ,eAsBI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,EAAE,EAAC,QAAzB;AAAkC,cAAA,QAAQ,EAAGI,CAAD,IAAOxF,SAAS,CAACwF,CAAC,CAACH,MAAF,CAASC,KAAV,CAA5D;AAAA,sCACI;AAAQ,gBAAA,KAAK,EAAC,QAAd;AAAuB,gBAAA,QAAQ,EAAGvF,MAAM,KAAK,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAqB,gBAAA,QAAQ,EAAGA,MAAM,KAAK,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,QAAQ,EAAGA,MAAM,KAAK,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBJ,eA+BI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,IAAI,EAAC,gBAAb;AAA8B,cAAA,EAAE,EAAC,gBAAjC;AAAkD,cAAA,QAAQ,EAAGyF,CAAD,IAAOpF,gBAAgB,CAACoF,CAAC,CAACH,MAAF,CAASC,KAAV,CAAnF;AAAA,sCACI;AAAQ,gBAAA,KAAK,EAAC,QAAd;AAAuB,gBAAA,QAAQ,EAAGnF,aAAa,KAAK,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAwB,gBAAA,QAAQ,EAAGA,aAAa,KAAK,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAwB,gBAAA,QAAQ,EAAGA,aAAa,KAAK,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CJ,eAyFI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzFJ,eA0FI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC,cAFd;AAGI,UAAA,YAAY,EAAEE,YAHlB;AAII,UAAA,QAAQ,EAAGmF,CAAD,IAAO;AAAElF,YAAAA,eAAe,CAACkF,CAAC,CAACH,MAAF,CAASC,KAAV,CAAf;AAAiC,WAJxD;AAKI,UAAA,IAAI,EAAC,SALT;AAMI,UAAA,SAAS,EAAC,IANd;AAOI,UAAA,WAAW,EAAC,2BAPhB;AAQI,UAAA,EAAE,EAAC,SARP;AAQiB,UAAA,QAAQ;AARzB;AAAA;AAAA;AAAA;AAAA,gBA1FJ,eAmGI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAnGJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eA2GQ,QAAC,QAAD;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCAEI;AAAO,cAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAQ,cAAA,IAAI,EAAC,eAAb;AAA6B,cAAA,EAAE,EAAC,eAAhC;AACI,cAAA,QAAQ,EAAGE,CAAD,IAAOhF,eAAe,CAACgF,CAAC,CAACH,MAAF,CAASC,KAAV,CADpC;AAAA,sCAEI;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,QAAQ,EAAG/E,YAAY,KAAK,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,gBAAA,KAAK,EAAC,UAAd;AAAyB,gBAAA,QAAQ,EAAGA,YAAY,KAAK,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCAEI;AAAO,cAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAO,cAAA,IAAI,EAAC,MAAZ;AACI,cAAA,IAAI,EAAC,eADT;AAEI,cAAA,YAAY,EAAEE,YAFlB;AAGI,cAAA,QAAQ,EAAG+E,CAAD,IAAO;AAAE9E,gBAAAA,eAAe,CAAC8E,CAAC,CAACH,MAAF,CAASC,KAAV,CAAf;AAAiC,eAHxD;AAII,cAAA,SAAS,EAAC,cAJd;AAKI,cAAA,WAAW,EAAC,0BALhB;AAMI,cAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eA4BI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eA6BI;AAAO,UAAA,IAAI,EAAC,MAAZ;AACI,UAAA,IAAI,EAAC,SADT;AAEI,UAAA,YAAY,EAAEzE,YAFlB;AAGI,UAAA,QAAQ,EAAG2E,CAAD,IAAO1E,eAAe,CAAC0E,CAAC,CAACH,MAAF,CAASC,KAAV,CAHpC;AAII,UAAA,SAAS,EAAC,cAJd;AAKI,UAAA,WAAW,EAAC,sCALhB;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eAsCI;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAtCJ,eAuCI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,aAFT;AAGI,UAAA,YAAY,EAAErE,gBAHlB;AAII,UAAA,QAAQ,EAAGuE,CAAD,IAAO;AAAEtE,YAAAA,mBAAmB,CAACsE,CAAC,CAACH,MAAF,CAASC,KAAV,CAAnB;AAAqC,WAJ5D;AAKI,UAAA,SAAS,EAAC,cALd;AAMI,UAAA,WAAW,EAAC,wBANhB;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBAvCJ,eAgDI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAQ,cAAA,IAAI,EAAC,cAAb;AAA4B,cAAA,QAAQ,MAApC;AAAqC,cAAA,QAAQ,EAAGE,CAAD,IAAO5F,eAAe,CAAC4F,CAAC,CAACH,MAAF,CAASC,KAAV,CAArE;AAAA,sCACI;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,QAAQ,EAAG3F,YAAY,KAAK,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,QAAQ,EAAGA,YAAY,KAAK,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCAEI;AAAO,cAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,EAAE,EAAC,QAAzB;AAAkC,cAAA,QAAQ,EAAG6F,CAAD,IAAO5E,gBAAgB,CAAC4E,CAAC,CAACH,MAAF,CAASC,KAAV,CAAnE;AAAA,yBAGS3F,YAAY,KAAK,OAAlB,iBACA,QAAC,QAAD;AAAA,0BACKyD,YAAY,CAAC4C,GAAb,CAAiB,CAAClB,KAAD,EAAQmB,KAAR,kBAAkB;AAAoB,kBAAA,KAAK,EAAEA,KAA3B;AAAkC,kBAAA,QAAQ,EAAGtF,aAAa,KAAKmE,KAA/D;AAAA,4BAAwEA;AAAxE,mBAAamB,KAAb;AAAA;AAAA;AAAA;AAAA,wBAAnC;AADL;AAAA;AAAA;AAAA;AAAA,sBAJR,EASStG,YAAY,KAAK,OAAlB,iBACA,QAAC,QAAD;AAAA,0BACK0D,WAAW,CAAC2C,GAAZ,CAAgB,CAAClB,KAAD,EAAQmB,KAAR,kBAAkB;AAAoB,kBAAA,KAAK,EAAEA,KAA3B;AAAkC,kBAAA,QAAQ,EAAGtF,aAAa,KAAKmE,KAA/D;AAAA,4BAAwEA;AAAxE,mBAAamB,KAAb;AAAA;AAAA;AAAA;AAAA,wBAAlC;AADL;AAAA;AAAA;AAAA;AAAA,sBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhDJ,eAiFI;AAAO,UAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjFJ,eAkFI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,oBAFT;AAGI,UAAA,YAAY,EAAE9E,iBAHlB;AAII,UAAA,QAAQ,EAAGqE,CAAD,IAAOpE,oBAAoB,CAACoE,CAAC,CAACH,MAAF,CAASC,KAAV,CAJzC;AAKI,UAAA,SAAS,EAAC,cALd;AAMI,UAAA,WAAW,EAAC,2BANhB;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBAlFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3GR,eAyMQ,QAAC,QAAD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCAII;AAAO,cAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AACI,cAAA,YAAY,EAAErD,gBADlB;AAEI,cAAA,QAAQ,EAAGuD,CAAD,IAAOtD,mBAAmB,CAACsD,CAAC,CAACH,MAAF,CAASC,KAAV,CAFxC;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,IAAI,EAAC,MAJT;AAKI,cAAA,MAAM,EAAEF,SALZ;AAMI,cAAA,IAAI,EAAC,mBANT;AAOI,cAAA,KAAK,EAAEnD,gBAPX;AAQI,cAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAiBI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eACsD;AAAA;AAAA;AAAA;AAAA,oBADtD,eAGI;AAAQ,cAAA,IAAI,EAAC,cAAb;AAA4B,cAAA,EAAE,EAAC,cAA/B;AACI,cAAA,QAAQ,EAAGuD,CAAD,IAAO;AACb1F,gBAAAA,cAAc,CAAC0F,CAAC,CAACH,MAAF,CAASC,KAAV,CAAd;AACAtD,gBAAAA,gBAAgB,CAAEnC,WAAW,KAAK,UAAjB,GAA+B,IAA/B,GAAsC,CAAvC,CAAhB;AACH,eAJL;AAAA,sCAMI;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAwB,gBAAA,QAAQ,EAAGA,WAAW,KAAK,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAQ,gBAAA,KAAK,EAAC,QAAd;AAAuB,gBAAA,QAAQ,EAAGA,WAAW,KAAK,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmCI;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCJ,eAoCI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,aAFT;AAGI,UAAA,OAAO,EAAEkB,eAHb;AAII,UAAA,QAAQ,EAAGyE,CAAD,IAAOxE,aAAa,CAACwE,CAAC,CAACH,MAAF,CAASC,KAAV,CAJlC;AAKI,UAAA,SAAS,EAAC,cALd;AAMI,UAAA,WAAW,EAAC,wBANhB;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBApCJ,eA8CI;AAAO,UAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CJ,eA+CI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,IAAI,EAAC,iBAFT;AAGI,UAAA,YAAY,EAAEvD,aAHlB;AAII,UAAA,QAAQ,EAAGyD,CAAD,IAAOxD,gBAAgB,CAACwD,CAAC,CAACH,MAAF,CAASC,KAAV,CAJrC;AAKI,UAAA,SAAS,EAAC,cALd;AAMI,UAAA,WAAW,EAAC,mCANhB;AAOI,UAAA,KAAK,EAAEvD,aAPX;AAQI,UAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,gBA/CJ,eA0DI;AAAO,UAAA,OAAO,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1DJ,eA2DI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,2BAFT;AAGI,UAAA,OAAO,EAAEF,uBAHb;AAII,UAAA,QAAQ,EAAG2D,CAAD,IAAO1D,0BAA0B,CAAC0D,CAAC,CAACH,MAAF,CAASC,KAAV,CAJ/C;AAKI,UAAA,SAAS,EAAC,cALd;AAMI,UAAA,WAAW,EAAC,sCANhB;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBA3DJ,eAsEI;AAAO,UAAA,OAAO,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtEJ,eAuEI;AACI,UAAA,OAAO,EAAE3D,wBADb;AAEI,UAAA,QAAQ,EAAG6D,CAAD,IAAO5D,2BAA2B,CAAC4D,CAAC,CAACH,MAAF,CAASC,KAAV,CAFhD;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,WAAW,EAAC,6BALhB;AAMI,UAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,gBAvEJ,eA+EI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBA/EJ,eAiFI;AAAO,UAAA,OAAO,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjFJ,eAkFI;AACI,UAAA,OAAO,EAAE7D,sBADb;AAEI,UAAA,QAAQ,EAAG+D,CAAD,IAAO9D,yBAAyB,CAAC8D,CAAC,CAACH,MAAF,CAASC,KAAV,CAF9C;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,WAAW,EAAC,qCALhB;AAMI,UAAA,IAAI,EAAC,2BANT;AAMqC,UAAA,QAAQ;AAN7C;AAAA;AAAA;AAAA;AAAA,gBAlFJ,eA0FI;AAAO,UAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1FJ,eA2FI;AACI,UAAA,OAAO,EAAE/D,kBADb;AAEI,UAAA,QAAQ,EAAGiE,CAAD,IAAOhE,qBAAqB,CAACgE,CAAC,CAACH,MAAF,CAASC,KAAV,CAF1C;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,IAAI,EAAC,QAJT;AAKI,UAAA,WAAW,EAAC,yCALhB;AAMI,UAAA,IAAI,EAAC,kBANT;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBA3FJ,eAqGI;AAAO,UAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArGJ,eAsGI;AACI,UAAA,OAAO,EAAEjE,yBADb;AAEI,UAAA,QAAQ,EAAGmE,CAAD,IAAOlE,4BAA4B,CAACkE,CAAC,CAACH,MAAF,CAASC,KAAV,CAFjD;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,WAAW,EAAC,wCALhB;AAMI,UAAA,IAAI,EAAC,uBANT;AAMiC,UAAA,QAAQ;AANzC;AAAA;AAAA;AAAA;AAAA,gBAtGJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzMR,eAwTI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCAAwB;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxTJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkUH,CA3dD;;GAAMtG,gB;UAEcF,U;;;KAFdE,gB;;AA6dN,MAAMkH,eAAe,GAAIpB,KAAD,IAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAAEA;AADJ,GAAP;AAGH,CAJD;;AAMA,eAAejG,OAAO,CAACqH,eAAD,CAAP,CAAyBlH,gBAAzB,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { registerUser } from '../store/services/userService';\r\nconst RegistrationPage = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [nameInput, setNameInput] = useState();\r\n    const [emailInput, setEmailInput] = useState();\r\n    const [usernameInput, setUsernameInput] = useState();\r\n    const [passwordInput, setPasswordInput] = useState();\r\n    const [countryInput, setCountryInput] = useState();\r\n    const [accountType, setAccountType] = useState();\r\n    const [gender, setGender] = useState();\r\n    const [dob, setDob] = useState();\r\n    const [maritalStatus, setMaritalStatus] = useState();\r\n    const [contactInput, setContactInput] = useState(0)\r\n    const [guardianType, setGuardianType] = useState();\r\n    const [guardianName, setGuardianName] = useState();\r\n    const [customerState, setCustomerState] = useState();\r\n    const [addressInput, setAddressInput] = useState()\r\n    const [branchNameInput, setBranchName] = useState()\r\n    const [citizenshipInput, setCitizenshipInput] = useState()\r\n    const [citizenshipStatus, setCitizenshipStatus] = useState()\r\n    const [referenceAccHolderAddress, setReferenceAccHolderAddress] = useState()\r\n    const [referenceAccNumber, setReferenceAccNumber] = useState()\r\n    const [referenceAccHolderName, setReferenceAccHolderName] = useState()\r\n    const [identificationDocumentNo, setIdentificationDocumentNo] = useState()\r\n    const [identificationProofType, setIdentificationProofType] = useState()\r\n    const [depositAmount, setDepositAmount] = useState(0);\r\n    const [registrationDate, setRegistrationDate] = useState(new Date());\r\n    const [ageInput, setAgeInput] = useState();\r\n    const [regId, setRegId] = useState()\r\n\r\n    const generate = (n) => {\r\n        var add = 1, max = 12 - add;   // 12 is the min safe number Math.random() can generate without it starting to pad the end with zeros.   \r\n\r\n        if (n > max) {\r\n            return generate(max) + generate(n - max);\r\n        }\r\n\r\n        max = Math.pow(10, n + add);\r\n        var min = max / 10; // Math.pow(10, n) basically\r\n        var number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n        return (\"\" + number).substring(add);\r\n    }\r\n\r\n    useEffect(() => {\r\n       setRegId\r\n    }, [])\r\n\r\n    let indianStates = [\"Andaman and Nicobar Islands\", \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chandigarh\", \"Chhattisgarh\", \"Dadra and Nagar Haveli\", \"Daman and Diu\", \"Delhi\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Lakshadweep\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Orissa\", \"Pondicherry\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Tripura\", \"Uttaranchal\", \"Uttar Pradesh\", \"West Bengal\"];\r\n    let spainStates = [\"Barcelona\", \"Madrid\", \"Sevilla\", \"Malaga\", \"Cadiz\", \"Zaragoza\", \"Granada\", \"Valencia\", \"Cordoba\", \"Girona\", \"Almeria\", \"Toledo\"];\r\n\r\n\r\n    const formHandler = (event) => {\r\n        event.preventDefault();\r\n        let nameRegex = /^[a-zA-Z\\s]*$/;\r\n        if (nameInput.trim() === '' || !nameRegex.test(nameInput)) {\r\n            document.getElementById(\"nameWarning\").style.display = \"block\";\r\n            document.getElementById(\"nameWarning\").innerHTML = \"Incorrect name!!! It should only contain letters and spaces\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"nameWarning\").style.display = \"none\";\r\n        }\r\n\r\n        if (usernameInput.trim() === '' || !nameRegex.test(usernameInput)) {\r\n            document.getElementById(\"usernameWarning\").style.display = \"block\";\r\n            document.getElementById(\"usernameWarning\").innerHTML = \"Incorrect usernname!!! It should only contain letters and spaces\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"usernameWarning\").style.display = \"none\";\r\n        }\r\n        let emailRegex = /^[a-zA-z0-9]+@.+\\..+$/;\r\n\r\n        if (emailInput.trim() === '' || !emailRegex.test(emailInput)) {\r\n            document.getElementById(\"emailWarning\").style.display = \"block\";\r\n            document.getElementById(\"emailWarning\").innerHTML = \"Incorrect email !!!\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"emailWarning\").style.display = \"none\";\r\n        }\r\n        if (contactInput.trim().length !== 10) {\r\n            document.getElementById(\"contactWarning\").style.display = \"block\";\r\n            document.getElementById(\"contactWarning\").innerHTML = contactInput.trim().length + \" Incorrect contact !!! Length must be exact 10\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"contactWarning\").style.display = \"none\";\r\n        }\r\n\r\n        let idDocNumRegex = /^[a-zA-Z0-9]*$/;\r\n\r\n        if (identificationDocumentNo.trim().length !== 12 || !idDocNumRegex.test(identificationDocumentNo)) {\r\n            document.getElementById(\"documentNumber\").style.display = \"block\";\r\n            document.getElementById(\"documentNumber\").innerHTML = \"Invalid Document Number !!! It should only contain letters and digits\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"documentNumber\").style.display = \"none\";\r\n        }\r\n\r\n        if (ageInput < 18 || ageInput > 96) {\r\n            document.getElementById(\"ageWarning\").style.display = \"block\";\r\n            document.getElementById(\"ageWarning\").innerHTML = \"Invalid Age  !!! It should be greater than 17 and less than 96\";\r\n            return;\r\n        }\r\n        else {\r\n            document.getElementById(\"ageWarning\").style.display = \"none\";\r\n        }\r\n\r\n        let customer = {\r\n            fullName: nameInput,\r\n            email: emailInput,\r\n            username: usernameInput,\r\n            password: passwordInput,\r\n            dob: dob,\r\n            age: ageInput,\r\n            gender: gender,\r\n            maritalStatus: maritalStatus,\r\n            contact: contactInput,\r\n            guardianType: guardianType,\r\n            guardianName: guardianName,\r\n            address: addressInput,\r\n            citizenship: citizenshipInput,\r\n            country: countryInput,\r\n            state: customerState,\r\n            citizenshipStatus: citizenshipStatus,\r\n            registrationDate: registrationDate,\r\n            accountType: accountType,\r\n            branchName: branchNameInput,\r\n            depositAmount: depositAmount,\r\n            identificationProofType: identificationProofType,\r\n            identificationDocumentNo: identificationDocumentNo,\r\n            referenceAccHolderName: referenceAccHolderName,\r\n            referenceAccNumber: referenceAccNumber,\r\n            referenceAccHolderAddress: referenceAccHolderAddress\r\n\r\n        }\r\n\r\n        console.log(customer);\r\n\r\n        props.dispatch(registerUser(customer));\r\n        history.push('/rs');\r\n    }\r\n\r\n    const checkDate = (event) => {\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    let currentDate = new Date();\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <form onSubmit={formHandler} className=\"form-group\">\r\n                {\r\n                    <Fragment>\r\n                        {/**1 */}\r\n                        <label htmlFor=\"full-name\">Name</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            defaultValue={nameInput}\r\n                            placeholder=\"Enter Your Full Name\"\r\n                            onChange={(e) => setNameInput(e.target.value)}\r\n                            name=\"fullName\"\r\n\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"nameWarning\"></p>\r\n                        {/**10 */}\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            defaultValue={emailInput}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            onChange={(e) => { setEmailInput(e.target.value) }}\r\n                            name=\"email\"\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"emailWarning\"></p>\r\n                        {/**2 */}\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            className=\"form-control\"\r\n                            defaultValue={usernameInput}\r\n                            onChange={(e) => { setUsernameInput(e.target.value) }}\r\n                            placeholder=\"Enter Login Name (username)\"\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"usernameWarning\"></p>\r\n                        {/**3 */}\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            defaultValue={passwordInput}\r\n                            onChange={(e) => setPasswordInput(e.target.value)}\r\n                            placeholder=\"Enter Your Password for Login\"\r\n                            minLength=\"8\"\r\n                            required />\r\n                        <p className=\"text-danger\" id=\"passwordWarning\"></p>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <label htmlFor=\"dob\">Date of Birth</label>{/* 14 , date of birth DD/MM/YYYY ,  side age check for minor */}\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"dob\"\r\n                                    defaultValue={dob}\r\n                                    type=\"date\"\r\n                                    max={currentDate.getTime()}\r\n                                    onChange={(e) => {\r\n                                        setDob(e.target.value);\r\n                                        let diff = Date.now() - new Date(e.target.value).getTime();\r\n                                        let ageDiff = new Date(diff);\r\n                                        let yearAge = ageDiff.getUTCFullYear();\r\n                                        let age = Math.abs(yearAge - 1970);\r\n                                        setAgeInput(age);\r\n                                    }}\r\n                                    onBlur={checkDate}\r\n                                    required />\r\n                                <p className=\"text-danger\" id=\"ageWarning\"></p>\r\n                            </div>\r\n                            <p className=\"text-danger\" id=\"dobWarning\"></p>\r\n                            <div className=\"col-md-4\">\r\n                                <label htmlFor=\"gender\">Gender</label>{/* gender 11*/}\r\n                                <select name=\"gender\" id=\"gender\" onChange={(e) => setGender(e.target.value)}>\r\n                                    <option value=\"female\" selected={(gender === 'female')}>Female</option>\r\n                                    <option value=\"male\" selected={(gender === 'male')}>Male</option>\r\n                                    <option value=\"other\" selected={(gender === 'other')}>Other</option>\r\n                                </select>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <label htmlFor=\"marital-status\">Marital Status</label>{/*marital status 12 */}\r\n                                <select name=\"marital-status\" id=\"marital-status\" onChange={(e) => setMaritalStatus(e.target.value)}>\r\n                                    <option value=\"single\" selected={(maritalStatus === 'single')}>Single</option>\r\n                                    <option value=\"married\" selected={(maritalStatus === 'married')}>Married</option>\r\n                                    <option value=\"divorce\" selected={(maritalStatus === 'divorce')}>Divorce</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/**13 */}\r\n                        <label htmlFor=\"contact\">Contact</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            defaultValue={contactInput}\r\n                            onChange={(e) => { setContactInput(e.target.value) }}\r\n                            name=\"contact\"\r\n                            minLength=\"10\"\r\n                            placeholder=\"Enter Your Contact Number\"\r\n                            id=\"contact\" required />\r\n                        <p className=\"text-danger\" id=\"contactWarning\"></p>\r\n                    </Fragment>\r\n                }\r\n\r\n\r\n                {\r\n                    <Fragment>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                {/* guardian type 4 */}\r\n                                <label htmlFor=\"guardian-type\">Guardian Type</label>\r\n                                <br></br>\r\n                                <select name=\"guardian-type\" id=\"guardian-type\"\r\n                                    onChange={(e) => setGuardianType(e.target.value)}>\r\n                                    <option value=\"local\" selected={(guardianType === 'local')}>Option 1</option>\r\n                                    <option value=\"parental\" selected={(guardianType === 'parental')}>Option 2</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                {/**5 */}\r\n                                <label htmlFor=\"guardian-name\">Guardian Name</label>\r\n                                <input type=\"text\"\r\n                                    name=\"guardian-name\"\r\n                                    defaultValue={guardianName}\r\n                                    onChange={(e) => { setGuardianName(e.target.value) }}\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Enter Your Guardian Name\"\r\n                                    required />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/**6 */}\r\n                        <label htmlFor=\"address\">Address</label>\r\n                        <input type=\"text\"\r\n                            name=\"address\"\r\n                            defaultValue={addressInput}\r\n                            onChange={(e) => setAddressInput(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Full Address with PinCode\"\r\n                            required />\r\n\r\n                        {/**7 */}\r\n                        <label htmlFor=\"citizenship\"></label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"citizenship\"\r\n                            defaultValue={citizenshipInput}\r\n                            onChange={(e) => { setCitizenshipInput(e.target.value) }}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Citizenship\"\r\n                            required />\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"country-name\">Country</label>\r\n                                {/**9 */}\r\n                                <select name=\"country-name\" required onChange={(e) => setCountryInput(e.target.value)}>\r\n                                    <option value=\"india\" selected={(countryInput === 'india')}>India</option>\r\n                                    <option value=\"spain\" selected={(countryInput === 'spain')}>Spain</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                {/** 8  ,state dropdown based on country */}\r\n                                <label htmlFor=\"states\">State</label>\r\n                                <select name=\"states\" id=\"states\" onChange={(e) => setCustomerState(e.target.value)}>\r\n\r\n                                    {\r\n                                        (countryInput === 'india') &&\r\n                                        <Fragment>\r\n                                            {indianStates.map((state, index) => <option key={index} value={index} selected={(customerState === state)}>{state}</option>)}\r\n                                        </Fragment>\r\n                                    }\r\n                                    {\r\n                                        (countryInput === 'spain') &&\r\n                                        <Fragment>\r\n                                            {spainStates.map((state, index) => <option key={index} value={index} selected={(customerState === state)}>{state}</option>)}\r\n                                        </Fragment>\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/**18  */}\r\n                        <label htmlFor=\"citizenship-status\">Citizenship Status</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"citizenship-status\"\r\n                            defaultValue={citizenshipStatus}\r\n                            onChange={(e) => setCitizenshipStatus(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Citizen Status\"\r\n                            required />\r\n                    </Fragment>\r\n                }\r\n\r\n                {\r\n                    <Fragment>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n\r\n                                {/* 15 Registration Date- Represents the customer registration Date \r\n                         which is automatically populated from the system current date  */}\r\n                                <label htmlFor=\"registration-date\">Registration Date</label>\r\n                                <input\r\n                                    defaultValue={registrationDate}\r\n                                    onChange={(e) => setRegistrationDate(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    onBlur={checkDate}\r\n                                    name=\"registration-date\"\r\n                                    value={registrationDate}\r\n                                    required />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"account-type\">Account Type</label><br></br>\r\n                                {/** 16 , account type options=salary/savings*/}\r\n                                <select name=\"account-type\" id=\"account-type\"\r\n                                    onChange={(e) => {\r\n                                        setAccountType(e.target.value);\r\n                                        setDepositAmount((accountType === 'savaings') ? 5000 : 0);\r\n                                    }}>\r\n\r\n                                    <option value=\"savings\" selected={(accountType === 'savings')}>Savings</option>\r\n                                    <option value=\"salary\" selected={(accountType === 'salary')}>Salary</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/**17 ,  */}\r\n                        <label htmlFor=\"branch-name\">Branch Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"branch-name\"\r\n                            default={branchNameInput}\r\n                            onChange={(e) => setBranchName(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Branch Name\"\r\n                            required />\r\n\r\n                        {/**19 */}{/**set it according to account type */}\r\n                        <label htmlFor=\"initial-deposit\">Initial Deposit</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"initial-deposit\"\r\n                            defaultValue={depositAmount}\r\n                            onChange={(e) => setDepositAmount(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Initial Deposit Amount\"\r\n                            value={depositAmount}\r\n                            required />\r\n\r\n                        {/**20 */}\r\n                        <label htmlFor=\"identification-proof-type\">Identification Proof Type</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"identification-proof-type\"\r\n                            default={identificationProofType}\r\n                            onChange={(e) => setIdentificationProofType(e.target.value)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Identification Proof Type\"\r\n                            required />\r\n\r\n\r\n                        {/**21 */}\r\n                        <label htmlFor=\"identification-document-no\">Identification Document No </label>\r\n                        <input\r\n                            default={identificationDocumentNo}\r\n                            onChange={(e) => setIdentificationDocumentNo(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Identification Document No.\"\r\n                            name=\"identification-document-no\">\r\n                        </input>\r\n                        <p className=\"text-danger\" id=\"documentNumber\"></p>\r\n\r\n                        <label htmlFor=\"reference-acc-holder-name\">Reference Account Holder Name</label>\r\n                        <input\r\n                            default={referenceAccHolderName}\r\n                            onChange={(e) => setReferenceAccHolderName(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Reference account holder name\"\r\n                            name=\"reference-acc-holder-name\" required />\r\n\r\n                        <label htmlFor=\"reference-acc-no\">Reference Account Holder Account Number</label>\r\n                        <input\r\n                            default={referenceAccNumber}\r\n                            onChange={(e) => setReferenceAccNumber(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            placeholder=\"Enter Reference account holder acc. No.\"\r\n                            name=\"reference-acc-no\"\r\n                            required />\r\n\r\n\r\n                        <label htmlFor=\"reference-acc-address\">Reference Account Holder Address</label>\r\n                        <input\r\n                            default={referenceAccHolderAddress}\r\n                            onChange={(e) => setReferenceAccHolderAddress(e.target.value)}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Reference account holder address\"\r\n                            name=\"reference-acc-address\" required />\r\n                    </Fragment>\r\n                }\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\"><button className=\"btn btn-success\"> Submit</button></div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegistrationPage);\r\n"]},"metadata":{},"sourceType":"module"}