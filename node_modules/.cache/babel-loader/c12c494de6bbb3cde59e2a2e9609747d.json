{"ast":null,"code":"import { GET_USER_BY_ID, GET_ALL_USER, EDIT_USER, ADD_USER, LOGIN_USER, ADD_LOAN, GET_ALL_LOANS, LOGOUT_USER } from '../actions/userActions';\nlet user = {};\nlet initialState = {\n  users: [],\n  loggedInUser: user,\n  token: null,\n  loans: []\n};\n\nconst userReducer = (state = initialState, action) => {\n  let newState;\n  console.log(action.type);\n\n  switch (action.type) {\n    case ADD_USER:\n      newState = { ...state,\n        users: [...state.users, action.payload],\n        loggedInUser: state.loggedInUser\n      };\n      return newState;\n\n    case GET_ALL_USER:\n      newState = { ...state,\n        users: action.payload\n      };\n      return newState;\n\n    case GET_USER_BY_ID:\n      newState = { ...state,\n        loggedInUser: action.payload\n      };\n      return newState;\n\n    case EDIT_USER:\n      newState = { ...state,\n        users: [state.users.slice(0, action.index), action.payload, state.users.slice(action.index + 1)]\n      };\n      return newState;\n\n    case LOGIN_USER:\n      newState = { ...state,\n        token: action.token,\n        loggedInUser: action.loggedInUser\n      };\n      return newState;\n\n    case ADD_LOAN:\n      newState = { ...state,\n        loans: [...state.loans, action.payload]\n      };\n      return newState;\n\n    case GET_ALL_LOANS:\n      newState = { ...state,\n        loans: action.payload\n      };\n      return newState;\n\n    case LOGOUT_USER:\n      newState = { ...state,\n        loggedInUser: null\n      };\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["G:/ProjectWork/Cognizant/DeltaLearning/ReactCaseStudyMay2021/bms/src/store/reducers/userReducers.js"],"names":["GET_USER_BY_ID","GET_ALL_USER","EDIT_USER","ADD_USER","LOGIN_USER","ADD_LOAN","GET_ALL_LOANS","LOGOUT_USER","user","initialState","users","loggedInUser","token","loans","userReducer","state","action","newState","console","log","type","payload","slice","index"],"mappings":"AAEA,SAAQA,cAAR,EAAuBC,YAAvB,EAAoCC,SAApC,EAA8CC,QAA9C,EAAwDC,UAAxD,EAAmEC,QAAnE,EAA4EC,aAA5E,EAA2FC,WAA3F,QAA6G,wBAA7G;AAEA,IAAIC,IAAI,GAAC,EAAT;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAC,EADS;AAEfC,EAAAA,YAAY,EAACH,IAFE;AAGfI,EAAAA,KAAK,EAAC,IAHS;AAIfC,EAAAA,KAAK,EAAC;AAJS,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACN,YAAP,EAAoBO,MAApB,KAA6B;AAC7C,MAAIC,QAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;;AACA,UAAOJ,MAAM,CAACI,IAAd;AAGI,SAAKjB,QAAL;AACKc,MAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAERL,QAAAA,KAAK,EAAC,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAgBM,MAAM,CAACK,OAAvB,CAFE;AAGRV,QAAAA,YAAY,EAACI,KAAK,CAACJ;AAHX,OAAX;AAKD,aAAOM,QAAP;;AACJ,SAAKhB,YAAL;AACKgB,MAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAERL,QAAAA,KAAK,EAACM,MAAM,CAACK;AAFL,OAAX;AAID,aAAOJ,QAAP;;AAEJ,SAAKjB,cAAL;AACKiB,MAAAA,QAAQ,GAAG,EACR,GAAGF,KADK;AAERJ,QAAAA,YAAY,EAACK,MAAM,CAACK;AAFZ,OAAX;AAID,aAAOJ,QAAP;;AAEJ,SAAKf,SAAL;AACKe,MAAAA,QAAQ,GAAC,EACN,GAAGF,KADG;AAENL,QAAAA,KAAK,EAAC,CAACK,KAAK,CAACL,KAAN,CAAYY,KAAZ,CAAkB,CAAlB,EAAoBN,MAAM,CAACO,KAA3B,CAAD,EAAmCP,MAAM,CAACK,OAA1C,EAAkDN,KAAK,CAACL,KAAN,CAAYY,KAAZ,CAAkBN,MAAM,CAACO,KAAP,GAAa,CAA/B,CAAlD;AAFA,OAAT;AAID,aAAON,QAAP;;AACJ,SAAKb,UAAL;AAEIa,MAAAA,QAAQ,GAAC,EACL,GAAGF,KADE;AAELH,QAAAA,KAAK,EAACI,MAAM,CAACJ,KAFR;AAGLD,QAAAA,YAAY,EAACK,MAAM,CAACL;AAHf,OAAT;AAKA,aAAOM,QAAP;;AACJ,SAAKZ,QAAL;AACIY,MAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPF,QAAAA,KAAK,EAAC,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAgBG,MAAM,CAACK,OAAvB;AAFC,OAAX;AAIJ,aAAOJ,QAAP;;AAEA,SAAKX,aAAL;AACIW,MAAAA,QAAQ,GAAC,EACL,GAAGF,KADE;AAELF,QAAAA,KAAK,EAACG,MAAM,CAACK;AAFR,OAAT;AAIJ,aAAOJ,QAAP;;AAEA,SAAKV,WAAL;AACIU,MAAAA,QAAQ,GAAC,EACL,GAAGF,KADE;AAELJ,QAAAA,YAAY,EAAC;AAFR,OAAT;AAIA,aAAOM,QAAP;;AAEJ;AAAS,aAAOF,KAAP;AA3Db;AA6DH,CAhED;;AAkEA,eAAeD,WAAf","sourcesContent":["\r\n\r\nimport {GET_USER_BY_ID,GET_ALL_USER,EDIT_USER,ADD_USER, LOGIN_USER,ADD_LOAN,GET_ALL_LOANS, LOGOUT_USER} from '../actions/userActions';\r\n\r\nlet user={}\r\n\r\nlet initialState = {\r\n    users:[],\r\n    loggedInUser:user,\r\n    token:null,\r\n    loans:[]\r\n}\r\n\r\nconst userReducer = (state=initialState,action)=>{\r\n    let newState;\r\n    console.log(action.type);\r\n    switch(action.type)\r\n    {\r\n        \r\n        case ADD_USER:\r\n             newState = {\r\n                 ...state,\r\n                users:[...state.users,action.payload],\r\n                loggedInUser:state.loggedInUser\r\n            }\r\n            return newState;\r\n        case GET_ALL_USER:\r\n             newState = {\r\n                 ...state,\r\n                users:action.payload,\r\n            }\r\n            return newState;\r\n\r\n        case GET_USER_BY_ID:\r\n             newState = {\r\n                ...state,\r\n                loggedInUser:action.payload\r\n            }\r\n            return newState;\r\n\r\n        case EDIT_USER:\r\n             newState={\r\n                ...state,\r\n                users:[state.users.slice(0,action.index),action.payload,state.users.slice(action.index+1)],\r\n            }\r\n            return newState;\r\n        case LOGIN_USER :\r\n            \r\n            newState={\r\n                ...state,\r\n                token:action.token,\r\n                loggedInUser:action.loggedInUser\r\n            }\r\n            return newState;\r\n        case ADD_LOAN:\r\n            newState = {\r\n                ...state,\r\n                loans:[...state.loans,action.payload]\r\n            }\r\n        return newState;\r\n\r\n        case GET_ALL_LOANS:\r\n            newState={\r\n                ...state,\r\n                loans:action.payload\r\n            }\r\n        return newState;\r\n\r\n        case LOGOUT_USER:\r\n            newState={\r\n                ...state,\r\n                loggedInUser:null\r\n            }\r\n            return newState;\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}